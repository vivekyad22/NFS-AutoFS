# NFS-AutoFS
NFS - port 111 UDP & TCP and 2049 

Configuration of NFS server with autofs for automatic mounting & unmounting, effectively used in mounting roaming users home directory on login . 

One drawback to using /etc/fstab is that, regardless of how infrequently a user accesses the NFS mounted file system, the system must dedicate resources to keep the mounted file system in place. This is not a problem with one or two mounts, but when the system is maintaining mounts to many systems at one time, overall system performance can be affected. 

autofs uses /etc/auto.master (master map) as its default primary configuration file.

Once the NFS file system is mounted read/write by a remote host, the only protection each shared file has is its permissions. If two users that share the same user ID value mount the same NFS file system, they can modify each others files. Additionally, anyone logged in as root on the client system can use the su - command to become a user who could access particular files via the NFS share. 

The default behavior when exporting a file system via NFS is to use root squashing. This sets the user ID of anyone accessing the NFS share as the root user on their local machine to a value of the server's nfsnobody account. Never turn off root squashing.

If exporting an NFS share read-only, consider using the all_squash option, which makes every user accessing the exported file system take the user ID of the nfsnobody user.

3.1.1. Direct and Indirect Maps

automount maps can be direct or indirect. Indirect maps, such as those in the auto.master file shown above, create-mount points as subdirectories inside the main mount-point. For example, consider the following master map entry:

/smb   /etc/auto.smb
This entry in auto.master tells autofs to look in /etc/auto.smb and create mount-points in the /smb directory.

Direct maps create a mount-point at the path specified in the relevant map file. The mount-point entry in auto.master is always /-. For example, the following line instructs autofs to create a mount-point at the place specified in auto.data:

/-        /etc/auto.data
If the map file is not specified using a full local or network path, the Name Service Switch configuration will be used to locate the map, e.g.:
/-        auto.data

5.2. Wildcard characters
Let's say you have a directory with a number of subdirectories which you want to have auto-mounted individually. An example of this is the /home directory, in which case /etc/auto.master might contain the following line:

/home   /etc/auto.home
If user1 is logged in, you will want to auto-mount his home directory

you can use wild-card characters, as follows:

*   server:/home/&

/var/log/messages is the logging directory

Resolution

Start autofs with the --debug option. Simply add it to the configuration file /etc/sysconfig/autofs in the following line:
AUTOFS_OPTIONS="--debug"

Restart the service with
rcautofs restart
and you will find a lot more information about what automount does in /var/log/messages.

nfs-kernel-server package

To export our directories to a local network 192.168.1.0/24 we add the following two lines to /etc/exports

/export       192.168.1.0/24(rw,fsid=0,insecure,no_subtree_check,async)
/export/users 192.168.1.0/24(rw,nohide,insecure,no_subtree_check,async)


no_subtree_check: If only part of a volume is exported, a routine called subtree checking verifies that a file that is requested from the client is in the appropriate part of the volume. If the entire volume is exported, disabling this check will speed up transfers.

no_root_squash: By default, any file request made by user root on the client machine is treated as if it is made by user nobody on the server. (Exactly which UID the request is mapped to depends on the UID of user "nobody" on the server, not the client.) If no_root_squash is selected, then root on the client machine will have the same level of access to the files on the system as root on the server. This can have serious security implications, although it may be necessary if you want to perform any administrative work on the client machine that involves the exported directories. You should not specify this option without a good reason.


async

This option allows the NFS server to violate the NFS protocol and reply to requests before any changes made by that request have been committed to stable storage (e.g. disc drive).
Using this option usually improves performance, but at the cost that an unclean server restart (i.e. a crash) can cause data to be lost or corrupted.

sync
Reply to requests only after the changes have been committed to stable storage .



NFS user permissions are based on user ID (UID). UIDs of any users on the client must match those on the server in order for the users to have access. The typical ways of doing this are:

Manual password file synchronization
Use of LDAP

Use of NIS

Install nfslogd for more logging
rpcinfo can be used for logging




































